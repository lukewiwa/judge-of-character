/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDetail
 */
export interface UserDetail {
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    readonly id?: string;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     * @type {string}
     * @memberof UserDetail
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    email?: string;
    /**
     * The groups this user belongs to. A user will get all permissions granted to each of their groups.
     * @type {Array<string>}
     * @memberof UserDetail
     */
    groups?: Array<string>;
    /**
     * Designates whether the user can log into this admin site.
     * @type {boolean}
     * @memberof UserDetail
     */
    isStaff?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserDetail
     */
    readonly url?: string;
}

export function UserDetailFromJSON(json: any): UserDetail {
    return UserDetailFromJSONTyped(json, false);
}

export function UserDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'username': json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'groups': !exists(json, 'groups') ? undefined : json['groups'],
        'isStaff': !exists(json, 'is_staff') ? undefined : json['is_staff'],
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function UserDetailToJSON(value?: UserDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'email': value.email,
        'groups': value.groups,
        'is_staff': value.isStaff,
    };
}


